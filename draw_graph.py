import cv2
import numpy as np


L = [[21, 10, 20, 11],
[69, 10, 20, 40,80, 35],
[38, 136, 69, 144, 34, 17, 72],
[148,10,36,17,66,160,73],
[138, 68, 160, 9, 80, 34, 21],
[84, 10, 5, 34, 144, 65, 168],
[37, 10, 20, 136, 65, 162, 80],
[386, 65, 160, 80, 40, 20, 10,261],
[81, 40, 20, 10, 260, 131, 320, 160],
[41, 20, 10, 68, 160, 320, 130, 273],
[21, 10, 36, 80, 288, 130,320, 137],
[35, 68, 18, 288,136, 20, 320,137],
[290, 5, 130, 264, 68, 144, 40, 81],
[21, 10, 68, 288, 129, 322, 144, 40],
[42, 144, 68, 9, 258, 133, 288, 80],
[42, 80, 288, 132, 9, 258, 69, 144],
[161, 80, 34, 272, 5, 10, 132, 328],
[161, 80, 40, 272, 132, 10, 5, 322],
[322, 9, 160, 66, 17, 36, 264, 148],
[73, 20, 160, 72, 272, 130, 5, 290],
[82, 40, 5, 18, 264, 132, 320, 161],
[145, 34, 80, 288, 5, 10, 132, 328],
[145, 40, 80, 288, 132, 10, 5, 322],
[41, 80, 36, 264, 130, 5, 322, 144],
[73, 20, 136, 292, 66, 272, 33, 130],
[290, 80, 36, 10, 144, 65, 260, 137],
[81, 40, 20, 264, 130, 5, 322, 160],
[292, 130, 5, 264, 66, 144, 40, 81],
[21, 10, 68, 161, 320, 130, 272, 40],
[161, 80, 288, 136, 20, 10, 516, 258, 577],
[161, 80, 40, 20, 264, 130, 516, 258, 577],
[67, 132, 18, 36, 72, 272, 640, 264, 545],
[67, 132, 34, 72, 288, 20, 640, 264, 529],
[41, 20, 72, 34, 132, 320, 640, 258, 529],
[81, 40, 20, 136, 66, 260, 640, 258, 545],
[73, 18, 132, 320, 34, 640, 264, 36, 529],
[67, 132, 320, 18, 136, 544, 272, 36, 521],
[42, 20, 72, 160, 320, 129, 516, 257, 530],
[67, 132, 320, 34, 136, 528, 264, 36, 529],
[321, 160, 66, 528, 258, 40, 20, 520, 133],
[67, 132, 18, 40, 80, 288, 640, 260, 521],
[81, 40, 18, 132, 66, 264, 640, 260, 545],
[137, 272, 72, 36, 144, 66, 516, 258, 545],
[131, 260, 18, 40, 144, 576, 288, 68, 521],
[73, 34, 260, 18, 72, 640, 272, 132, 545],
[67, 516, 18, 136, 544, 80, 288, 132, 265],
[321, 160, 72, 528, 264, 132, 18, 516, 35],
[81, 40, 18, 132, 66, 288, 640, 260, 521]]
for i in range(len(L)):
    cromwell = L[i]
    n = len(cromwell)
    cromwell = list(list(map(int, ('0'*(n+1-len(bin(cromwell[i])[2:])))+(bin(cromwell[i]))[2:])) for i in range(len(cromwell)))
    for i in range(n+1):    #row 하나 잡기
        ind = []    #index
        for j in range(n):
            if cromwell[j][i] == 1:
                ind.append(j)
        print(ind, i)
        for j in range(ind[0]+1,ind[1]):    #crossing 발생 검사
            ind1 = []
            for k in range(n+1):
                if cromwell[j][k] == 1:
                    ind1.append(k)
            if ind1[0] < i < ind1[-1]:
                cromwell[j][i] = 2  #crossing 좌표 2로 표시

    # 하양색 영상 생성
    # 400X400X3 행렬, 모든 픽셀을 255(하양색), 데이터 타입 : np.unit8
    img = np.full((800,800,3), 255, np.uint8)



    for i in range(n):
        row = cromwell[i]
        start = -1
        for j in range(n+1):
            if row[j] == 1:
                if start == -1:
                    start = j
                else:
                    if row[start] == 1:
                        cv2.line(img, (50 + 50*start, 50 + 50*i), (50 * j+50, 50 + 50*i), (0,0,0), 5)
                    elif row[start] == 2:
                        cv2.line(img, (65 + 50*start, 50 + 50*i), (50 * j+50, 50 + 50*i), (0,0,0), 5)
            elif row[j] == 2:
                if row[start] == 1:
                    cv2.line(img, (50 + 50*start, 50 + 50*i), (35 + j*50, 50 + 50*i), (0,0,0), 5)
                elif row[start] == 2:
                    cv2.line(img, (65 + 50*start, 50 + 50*i), (35 + j*50, 50 + 50*i), (0,0,0), 5)
                start = j
    for i in range(n+1):
        ind =[]
        for j in range(n):
            if cromwell[j][i] == 1:
                ind.append(j)
        print(i, ind)
        cv2.line(img, (50 + 50*i, 50+50*ind[0]), (50+50*i, 50+50*ind[1]), (0,0,0), 5)



    # 영상 출력
    cv2.imshow("img", img)
    cv2.waitKey()
    cv2.destroyAllWindows()